package com.ops.sc.ta.trans.datasource;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class JdbcStatementProxy extends BaseStatementProxy {

    public JdbcStatementProxy(Statement statement, ScDataSource scDataSource, DatabaseResource databaseResource) {
        super(statement, scDataSource, databaseResource);
    }

    @Override
    public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException {
        return StatementTemplate.execute(this, sql, () -> statement.executeUpdate(sql, autoGeneratedKeys));
    }

    @Override
    public int executeUpdate(String sql, int[] columnIndexes) throws SQLException {
        return StatementTemplate.execute(this, sql, () -> statement.executeUpdate(sql, columnIndexes));
    }

    @Override
    public int executeUpdate(String sql, String[] columnNames) throws SQLException {
        return StatementTemplate.execute(this, sql, () -> statement.executeUpdate(sql, columnNames));
    }

    @Override
    public boolean execute(String sql, int[] columnIndexes) throws SQLException {
        return StatementTemplate.execute(this, sql, () -> statement.execute(sql, columnIndexes));
    }

    @Override
    public boolean execute(String sql, String[] columnNames) throws SQLException {
        return StatementTemplate.execute(this, sql, () -> statement.execute(sql, columnNames));
    }

    @Override
    public ResultSet executeQuery(String sql) throws SQLException {
        return StatementTemplate.execute(this, sql, () -> statement.executeQuery(sql));
    }

    @Override
    public boolean execute(String sql) throws SQLException {
        return StatementTemplate.execute(this, sql, () -> statement.execute(sql));
    }

    @Override
    public boolean execute(String sql, int autoGeneratedKeys) throws SQLException {
        return StatementTemplate.execute(this, sql, () -> statement.execute(sql, autoGeneratedKeys));
    }

    @Override
    public int executeUpdate(String sql) throws SQLException {
        return StatementTemplate.execute(this, sql, () -> statement.executeUpdate(sql));
    }
}
