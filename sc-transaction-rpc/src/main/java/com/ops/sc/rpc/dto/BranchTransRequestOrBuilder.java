// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: branchRequest.proto

package com.ops.sc.rpc.dto;

public interface BranchTransRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:BranchTransRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string businessId = 1;</code>
   */
  java.lang.String getBusinessId();
  /**
   * <code>string businessId = 1;</code>
   */
  com.google.protobuf.ByteString
      getBusinessIdBytes();

  /**
   * <code>string tid = 2;</code>
   */
  java.lang.String getTid();
  /**
   * <code>string tid = 2;</code>
   */
  com.google.protobuf.ByteString
      getTidBytes();

  /**
   * <code>string bid = 3;</code>
   */
  java.lang.String getBid();
  /**
   * <code>string bid = 3;</code>
   */
  com.google.protobuf.ByteString
      getBidBytes();

  /**
   * <pre>
   * 调用方本机ip
   * </pre>
   *
   * <code>string callerIp = 4;</code>
   */
  java.lang.String getCallerIp();
  /**
   * <pre>
   * 调用方本机ip
   * </pre>
   *
   * <code>string callerIp = 4;</code>
   */
  com.google.protobuf.ByteString
      getCallerIpBytes();

  /**
   * <pre>
   * 分支名字
   * </pre>
   *
   * <code>string branchTransName = 5;</code>
   */
  java.lang.String getBranchTransName();
  /**
   * <pre>
   * 分支名字
   * </pre>
   *
   * <code>string branchTransName = 5;</code>
   */
  com.google.protobuf.ByteString
      getBranchTransNameBytes();

  /**
   * <pre>
   * 锁相关内容
   * </pre>
   *
   * <code>.BranchTransRequest.LockContext lockContext = 6;</code>
   */
  boolean hasLockContext();
  /**
   * <pre>
   * 锁相关内容
   * </pre>
   *
   * <code>.BranchTransRequest.LockContext lockContext = 6;</code>
   */
  com.ops.sc.rpc.dto.BranchTransRequest.LockContext getLockContext();
  /**
   * <pre>
   * 锁相关内容
   * </pre>
   *
   * <code>.BranchTransRequest.LockContext lockContext = 6;</code>
   */
  com.ops.sc.rpc.dto.BranchTransRequest.LockContextOrBuilder getLockContextOrBuilder();

  /**
   * <code>.google.protobuf.UInt32Value operateType = 7;</code>
   */
  boolean hasOperateType();
  /**
   * <code>.google.protobuf.UInt32Value operateType = 7;</code>
   */
  com.google.protobuf.UInt32Value getOperateType();
  /**
   * <code>.google.protobuf.UInt32Value operateType = 7;</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getOperateTypeOrBuilder();

  /**
   * <code>.google.protobuf.UInt32Value branchType = 8;</code>
   */
  boolean hasBranchType();
  /**
   * <code>.google.protobuf.UInt32Value branchType = 8;</code>
   */
  com.google.protobuf.UInt32Value getBranchType();
  /**
   * <code>.google.protobuf.UInt32Value branchType = 8;</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getBranchTypeOrBuilder();
}
